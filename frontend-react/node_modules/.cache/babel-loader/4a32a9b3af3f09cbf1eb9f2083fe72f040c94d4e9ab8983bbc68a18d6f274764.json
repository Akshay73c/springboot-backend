{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\expense-tracker-react-springboot\\\\frontend-react\\\\src\\\\components\\\\NavBar.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useMatch, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NavBar() {\n  _s();\n  const navigate = useNavigate();\n  const isLoggedIn = () => {\n    // Check if user is logged in (implement your logic)\n    return true; // Replace with your actual authentication checking\n  };\n  const logout = () => {\n    // Perform logout logic (e.g., clear token, redirect)\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: useMatch(\"/\") ? \"active\" : \"\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), !isLoggedIn() && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      className: useMatch(\"/login\") ? \"active\" : \"\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), isLoggedIn() && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/expenses\",\n        className: useMatch(\"/expenses\") ? \"active\" : \"\",\n        children: \"Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(NavBar, \"KdZ5tQl7VlPf3J6PKkH5MEY298U=\", false, function () {\n  return [useNavigate, useMatch, useMatch, useMatch];\n});\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["Link","useMatch","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","_s","navigate","isLoggedIn","logout","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/expense-tracker-react-springboot/frontend-react/src/components/NavBar.jsx"],"sourcesContent":["import { Link, useMatch, useNavigate } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n    const navigate = useNavigate();\r\n\r\n    const isLoggedIn = () => {\r\n        // Check if user is logged in (implement your logic)\r\n        return true; // Replace with your actual authentication checking\r\n    };\r\n\r\n    const logout = () => {\r\n        // Perform logout logic (e.g., clear token, redirect)\r\n        navigate(\"/\");\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <Link to=\"/\" className={useMatch(\"/\") ? \"active\" : \"\"}>\r\n                Home\r\n            </Link>\r\n            {!isLoggedIn() && (\r\n                <Link to=\"/login\" className={useMatch(\"/login\") ? \"active\" : \"\"}>\r\n                    Login\r\n                </Link>\r\n            )}\r\n            {isLoggedIn() && (\r\n                <>\r\n                    <Link to=\"/expenses\" className={useMatch(\"/expenses\") ? \"active\" : \"\"}>\r\n                        Expenses\r\n                    </Link>\r\n                    <button onClick={logout} className=\"logout-btn\">\r\n                        Logout\r\n                    </button>\r\n                </>\r\n            )}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA,OAAO,IAAI,CAAC,CAAC;EACjB,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB;IACAF,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,oBACIL,OAAA;IAAKQ,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBT,OAAA,CAACJ,IAAI;MAACc,EAAE,EAAC,GAAG;MAACF,SAAS,EAAEX,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAG;MAAAY,QAAA,EAAC;IAEvD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACN,CAACR,UAAU,CAAC,CAAC,iBACVN,OAAA,CAACJ,IAAI;MAACc,EAAE,EAAC,QAAQ;MAACF,SAAS,EAAEX,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,EAAG;MAAAY,QAAA,EAAC;IAEjE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACT,EACAR,UAAU,CAAC,CAAC,iBACTN,OAAA,CAAAE,SAAA;MAAAO,QAAA,gBACIT,OAAA,CAACJ,IAAI;QAACc,EAAE,EAAC,WAAW;QAACF,SAAS,EAAEX,QAAQ,CAAC,WAAW,CAAC,GAAG,QAAQ,GAAG,EAAG;QAAAY,QAAA,EAAC;MAEvE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPd,OAAA;QAAQe,OAAO,EAAER,MAAO;QAACC,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAEhD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACX,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACV,EAAA,CAnCQD,MAAM;EAAA,QACML,WAAW,EAcID,QAAQ,EAICA,QAAQ,EAMDA,QAAQ;AAAA;AAAAmB,EAAA,GAzBnDb,MAAM;AAqCf,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}